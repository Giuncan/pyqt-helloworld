name: Test actions

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        python-version:
        - '3.10'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install reps
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update
          sudo apt install -y qtcreator qtbase5-dev qt5-qmake cmake
          sudo apt list --installed

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Build exec (Linux & macOS)
        run: |
          pyinstaller --onefile --clean --windowed pyqt_helloworld/pyqt_helloworld.py
    
      - name: Test installer
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          ls dist/*/*/RCM
          cp dist/*/*/RCM .
          sudo apt-get install -y xvfb timeout
          xvfb-run --auto-servernum timeout 1m ./RCM
      
      - name: Tar files
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          tar -czvf artifact_${{ matrix.os }}.tgz dist/*
          rm -rf dist/*
          ls -ltr artifact_${{ matrix.os }}.tgz
          mv artifact_${{ matrix.os }}.tgz dist/
        
      - name: Upload exe
        uses: actions/upload-artifact@v3
        with:
          name: pyinstaller exe
          path: |
            dist
