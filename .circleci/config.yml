# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# https://circleci.com/docs/using-matrix-jobs/
executors:
  docker: # Docker using the Base Convenience Image
    docker:
      - image: python:3.10
  linux: # a Linux VM running Ubuntu 20.04
    machine:
      image: ubuntu-2004:202107-02
  # macos: # macos executor running Xcode
  #   macos:
  #     xcode: 14.2.0


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - when:
          condition:
            equal: [ linux, <<parameters.os>> ]
          steps:
            - run: sudo apt install python3
      - run:
          name: "Install dependencies"
          command: |
            python -m pip install --upgrade pip
            pip install poetry
            poetry install
      - run:
          name: "Build exe"
          command: |
            source .venv/bin/activate
            pyinstaller --onefile --clean --windowed pyqt_helloworld/pyqt_helloworld.py
      - store_artifacts:
          path: dist


# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello:
          matrix:
            parameters:
              python_version: ["3.10"]
              platform: [docker, linux]
